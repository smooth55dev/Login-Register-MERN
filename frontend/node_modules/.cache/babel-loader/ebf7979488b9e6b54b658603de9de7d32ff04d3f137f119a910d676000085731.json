{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\Yamada\\\\Login-Register-MERN\\\\frontend\\\\src\\\\middleware\\\\auth.js\",\n  _s = $RefreshSig$();\nimport { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthorizeUser = _ref => {\n  let {\n    children\n  } = _ref;\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = AuthorizeUser;\nexport const ProtectRoute = _ref2 => {\n  _s();\n  let {\n    children\n  } = _ref2;\n  const {\n    username\n  } = useSelector(state => state.authSlice);\n  if (!username) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectRoute, \"llshIvVJv5GXXA6+0c8mtUEGf5o=\", false, function () {\n  return [useSelector];\n});\n_c2 = ProtectRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthorizeUser\");\n$RefreshReg$(_c2, \"ProtectRoute\");","map":{"version":3,"names":["Navigate","useSelector","jsxDEV","_jsxDEV","AuthorizeUser","_ref","children","token","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProtectRoute","_ref2","_s","username","state","authSlice","_c2","$RefreshReg$"],"sources":["D:/work/Yamada/Login-Register-MERN/frontend/src/middleware/auth.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nexport const AuthorizeUser = ({ children }) => {\n  const token = localStorage.getItem(\"token\");\n\n  if (!token) {\n    return <Navigate to={\"/\"} replace={true}></Navigate>;\n  }\n\n  return children;\n};\n\nexport const ProtectRoute = ({ children }) => {\n  const { username } = useSelector((state) => state.authSlice);\n  if (!username) {\n    return <Navigate to={\"/\"} replace={true}></Navigate>;\n  }\n  return children;\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EACxC,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAE,GAAI;MAACC,OAAO,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY;EACtD;EAEA,OAAOT,QAAQ;AACjB,CAAC;AAACU,EAAA,GARWZ,aAAa;AAU1B,OAAO,MAAMa,YAAY,GAAGC,KAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEb;EAAS,CAAC,GAAAY,KAAA;EACvC,MAAM;IAAEE;EAAS,CAAC,GAAGnB,WAAW,CAAEoB,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;EAC5D,IAAI,CAACF,QAAQ,EAAE;IACb,oBAAOjB,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAE,GAAI;MAACC,OAAO,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY;EACtD;EACA,OAAOT,QAAQ;AACjB,CAAC;AAACa,EAAA,CANWF,YAAY;EAAA,QACFhB,WAAW;AAAA;AAAAsB,GAAA,GADrBN,YAAY;AAAA,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}